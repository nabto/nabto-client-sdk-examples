name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-18.04, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - name: Configure cmake
        run: mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/artifact ..

      - name: Build
        run: cmake --build build --target install

      - if: matrix.os == 'windows-2019'
        name: Test run
        run: ${{ github.workspace }}/artifact/simple_coap_client.exe

      - if: matrix.os != 'windows-2019'
        name: Test run
        run: ${{ github.workspace }}/artifact/simple_coap_client

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: artifacts_${{matrix.os}}
          path: ${{ github.workspace }}/artifact
          if-no-files-found: warn

  release-assets:
    name: Release Assets
    needs: build-and-test
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        binary: [simple_coap_client, simple_stream_client, simple_tunnel_client, heat_pump_client]
    if: github.event_name == 'release' && success()
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifacts_ubuntu-16.04
          path: linux
      - uses: actions/download-artifact@v2
        with:
          name: artifacts_windows-2019
          path: windows
      - uses: actions/download-artifact@v2
        with:
          name: artifacts_macos-10.15
          path: macos
      - name: List assets
        run: ls -R
      - name: Upload linux asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: linux/bin/${{ matrix.binary}}
          asset_name: ${{ matrix.binary}}_linux
          asset_content_type: application/octet-stream
      - name: Upload windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: windows/bin/${{ matrix.binary}}.exe
          asset_name: ${{ matrix.binary}}_windows.exe
          asset_content_type: application/octet-stream
      - name: Upload mac asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: macos/bin/${{ matrix.binary}}
          asset_name: ${{ matrix.binary}}_macos
          asset_content_type: application/octet-stream
